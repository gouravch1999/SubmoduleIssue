/****************************************************************************
 * COPYRIGHT VITESCO TECHNOLOGIES GROUP AG (EXCLUSIVE RIGHTS) 
 * Confidential
 * 
 * The reproduction, transmission or use of this document or its
 * contents is not permitted without express written authority.
 * Offenders will be liable for damages. All rights, including rights
 * created by patent grant or registration of a utility model or design,
 * are reserved.
 *---------------------------------------------------------------------------
 * 
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !!! This file is generated by Signal Mapper (SIMA) Code-Generator !!!
 * !!! Do NOT modify this file manually                            !!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * 
 * Purpose:    PL Hook Header for MCR
 * 
 * Processor:  independent
 * Tool chain: 
 *    CG-Version:        6.2.0
 *    Schema-Version:    1.18.0
 *    Generation-Date:   05.09.2024  16:24:52  
 *    Generated by user: uiv00534
 * Filename:   $Workfile$
 * Revision:   $Revision: 1.3 $
 * Author:     $Author: Zhang Yi (uiv00534) (uiv00534) $
 * Date:       $Date: 2024/09/06 07:27:51CEST $
 * Changes:    $Log: ipl_hook_tx_priv_mcr.h  $
 * Changes:    Revision 1.3 2024/09/06 07:27:51CEST Zhang Yi (uiv00534) (uiv00534) 
 * Changes:    16683028: intc_sigcv_cclu1: doc development and code update
 * 
****************************************************************************/
#ifndef IPL_HOOK_TX_PRIV_MCR_H
#define IPL_HOOK_TX_PRIV_MCR_H

#undef ACTION_ID_NONE
#undef RUNNABLE_ID_NONE
#define ACTION_ID_NONE 0
#define RUNNABLE_ID_NONE 0

#define ACTION_ID_PL_Cvt_EduPriv_PE_ConCmd 12
#define ACTION_ID_PL_Cvt_EduPriv_PE_CosPhi 13
#define ACTION_ID_PL_Cvt_EduPriv_PE_DiodeTemperature 14
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmRotAg 15
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmRotAgVld 16
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmSpd 17
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmSpdVld 18
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmTq 19
#define ACTION_ID_PL_Cvt_EduPriv_PE_EmTqVld 20
#define ACTION_ID_PL_Cvt_EduPriv_PE_ModulationFactor 21
#define ACTION_ID_PL_Cvt_EduPriv_PE_ModulationProcess 22
#define ACTION_ID_PL_Cvt_EduPriv_PE_NmAcvnAcu 23
#define ACTION_ID_PL_Cvt_EduPriv_PE_PWMFrequency 24
#define ACTION_ID_PL_Cvt_EduPriv_PE_PhaseCurrent 25
#define ACTION_ID_PL_Cvt_EduPriv_PE_SpdCtrlCfmd 26
#define ACTION_ID_PL_Cvt_EduPriv_PE_StateInv 27
#define ACTION_ID_PL_Cvt_EduPriv_PE_TjunctionTemperature 28
#define ACTION_ID_PL_Cvt_EduPriv_PE_TqCtrlCfmd 29
#define ACTION_ID_PL_Cvt_EduPriv_PE_WaterTemperature 30
#define ACTION_ID_PL_Cvt_EduPriv_PE_WhlSpd1 31
#define ACTION_ID_PL_Cvt_EduPriv_PE_WhlSpd2 32
#define ACTION_ID_PL_Cvt_EduPriv_PE_WhlSpdVld1 33
#define ACTION_ID_PL_Cvt_EduPriv_PE_WhlSpdVld2 34
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon0 35
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon1 36
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon2 37
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon3 38
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon4 39
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon5 40
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon6 41
#define ACTION_ID_PL_Cvt_EduPriv_PE_aeIdfLstActErrFmyMon7 42
#endif

#if !(defined RUNNABLE_ID || defined ACTION_ID)
#error "No RUNNABLE_ID or ACTION_ID defined"
#endif
#ifndef RUNNABLE_ID
#define RUNNABLE_ID RUNNABLE_ID_NONE
#endif
#ifndef ACTION_ID
#define ACTION_ID ACTION_ID_NONE
#endif


/* Getters and setters for everyone */
#ifdef AeIdfLstActErrFmyMon
  #ifndef GET_aeIdfLstActErrFmyMon
    #define GET_aeIdfLstActErrFmyMon(i) (AeIdfLstActErrFmyMon(i))
  #endif
#else
  #ifndef GET_aeIdfLstActErrFmyMon
    #define GET_aeIdfLstActErrFmyMon(i) (aeIdfLstActErrFmyMon[i])
  #endif
#endif
#ifdef F32AngRotorEstim
  #ifndef GET_f32AngRotorEstim
    #define GET_f32AngRotorEstim() (1 /*F32AngRotorEstim() */ )
  #endif
#else
  #ifndef GET_f32AngRotorEstim
    #define GET_f32AngRotorEstim() (1 /*F32AngRotorEstim() */)
  #endif
#endif
#ifdef F32FrqSwiPwmInvt1
  #ifndef GET_f32FrqSwiPwmInvt1
    #define GET_f32FrqSwiPwmInvt1() (1 /*F32FrqSwiPwmInvt1() */)
  #endif
#else
  #ifndef GET_f32FrqSwiPwmInvt1
    #define GET_f32FrqSwiPwmInvt1() (1 /*F32FrqSwiPwmInvt1() */)
  #endif
#endif
#ifdef F32NRotorLpfSlow
  #ifndef GET_f32NRotorLpfSlow
    #define GET_f32NRotorLpfSlow() (1 /* F32NRotorLpfSlow() */)
  #endif
#else
  #ifndef GET_f32NRotorLpfSlow
    #define GET_f32NRotorLpfSlow() (1 /* f32NRotorLpfSlow */)
  #endif
#endif
#ifdef Pl_FacMduInvtFil
  #ifndef GET_Pl_FacMduInvtFil
    #define GET_Pl_FacMduInvtFil() (Pl_FacMduInvtFil())
  #endif
#else
  #ifndef GET_Pl_FacMduInvtFil
    #define GET_Pl_FacMduInvtFil() (Pl_FacMduInvtFil)
  #endif
#endif
#ifdef Pl_FacPwrInvtFil
  #ifndef GET_Pl_FacPwrInvtFil
    #define GET_Pl_FacPwrInvtFil() (Pl_FacPwrInvtFil())
  #endif
#else
  #ifndef GET_Pl_FacPwrInvtFil
    #define GET_Pl_FacPwrInvtFil() (Pl_FacPwrInvtFil)
  #endif
#endif
#ifdef Pl_IRmsPha3FilInvt
  #ifndef GET_Pl_IRmsPha3FilInvt
    #define GET_Pl_IRmsPha3FilInvt() (Pl_IRmsPha3FilInvt())
  #endif
#else
  #ifndef GET_Pl_IRmsPha3FilInvt
    #define GET_Pl_IRmsPha3FilInvt() (Pl_IRmsPha3FilInvt)
  #endif
#endif
#ifdef Pl_LvStPosnRotorVld
  #ifndef GET_Pl_LvStPosnRotorVld
    #define GET_Pl_LvStPosnRotorVld() (Pl_LvStPosnRotorVld())
  #endif
#else
  #ifndef GET_Pl_LvStPosnRotorVld
    #define GET_Pl_LvStPosnRotorVld() (Pl_LvStPosnRotorVld)
  #endif
#endif
#ifdef Pl_PeConCmd
  #ifndef GET_Pl_PeConCmd
    #define GET_Pl_PeConCmd() (Pl_PeConCmd())
  #endif
#else
  #ifndef GET_Pl_PeConCmd
    #define GET_Pl_PeConCmd() (Pl_PeConCmd)
  #endif
#endif
#ifdef Pl_PeEmTq
  #ifndef GET_Pl_PeEmTq
    #define GET_Pl_PeEmTq() (Pl_PeEmTq())
  #endif
#else
  #ifndef GET_Pl_PeEmTq
    #define GET_Pl_PeEmTq() (Pl_PeEmTq)
  #endif
#endif
#ifdef Pl_PeNmAcvnAcu
  #ifndef GET_Pl_PeNmAcvnAcu
    #define GET_Pl_PeNmAcvnAcu() (Pl_PeNmAcvnAcu())
  #endif
#else
  #ifndef GET_Pl_PeNmAcvnAcu
    #define GET_Pl_PeNmAcvnAcu() (Pl_PeNmAcvnAcu)
  #endif
#endif
#ifdef Pl_PeSpdCtlCfm
  #ifndef GET_Pl_PeSpdCtlCfm
    #define GET_Pl_PeSpdCtlCfm() (Pl_PeSpdCtlCfm())
  #endif
#else
  #ifndef GET_Pl_PeSpdCtlCfm
    #define GET_Pl_PeSpdCtlCfm() (Pl_PeSpdCtlCfm)
  #endif
#endif
#ifdef Pl_PeTqCtlCfm
  #ifndef GET_Pl_PeTqCtlCfm
    #define GET_Pl_PeTqCtlCfm() (Pl_PeTqCtlCfm())
  #endif
#else
  #ifndef GET_Pl_PeTqCtlCfm
    #define GET_Pl_PeTqCtlCfm() (Pl_PeTqCtlCfm)
  #endif
#endif
#ifdef Pl_StEmInvtReq
  #ifndef GET_Pl_StEmInvtReq
    #define GET_Pl_StEmInvtReq() (Pl_StEmInvtReq())
  #endif
#else
  #ifndef GET_Pl_StEmInvtReq
    #define GET_Pl_StEmInvtReq() (Pl_StEmInvtReq)
  #endif
#endif
#ifdef Pl_StQlyTqEmEstim
  #ifndef GET_Pl_StQlyTqEmEstim
    #define GET_Pl_StQlyTqEmEstim() (Pl_StQlyTqEmEstim())
  #endif
#else
  #ifndef GET_Pl_StQlyTqEmEstim
    #define GET_Pl_StQlyTqEmEstim() (Pl_StQlyTqEmEstim)
  #endif
#endif
#ifdef Pl_TSemcdDiodeInvtMax
  #ifndef GET_Pl_TSemcdDiodeInvtMax
    #define GET_Pl_TSemcdDiodeInvtMax() (Pl_TSemcdDiodeInvtMax())
  #endif
#else
  #ifndef GET_Pl_TSemcdDiodeInvtMax
    #define GET_Pl_TSemcdDiodeInvtMax() (Pl_TSemcdDiodeInvtMax)
  #endif
#endif
#ifdef Pl_TSemcdPwrSwiDiodeInvtMax
  #ifndef GET_Pl_TSemcdPwrSwiDiodeInvtMax
    #define GET_Pl_TSemcdPwrSwiDiodeInvtMax() (Pl_TSemcdPwrSwiDiodeInvtMax())
  #endif
#else
  #ifndef GET_Pl_TSemcdPwrSwiDiodeInvtMax
    #define GET_Pl_TSemcdPwrSwiDiodeInvtMax() (Pl_TSemcdPwrSwiDiodeInvtMax)
  #endif
#endif
#ifdef Pl_TWtrCoolIn
  #ifndef GET_Pl_TWtrCoolIn
    #define GET_Pl_TWtrCoolIn() (Pl_TWtrCoolIn())
  #endif
#else
  #ifndef GET_Pl_TWtrCoolIn
    #define GET_Pl_TWtrCoolIn() (Pl_TWtrCoolIn)
  #endif
#endif
#ifdef Pl_TypPwmInvtOppReq
  #ifndef GET_Pl_TypPwmInvtOppReq
    #define GET_Pl_TypPwmInvtOppReq() (Pl_TypPwmInvtOppReq())
  #endif
#else
  #ifndef GET_Pl_TypPwmInvtOppReq
    #define GET_Pl_TypPwmInvtOppReq() (Pl_TypPwmInvtOppReq)
  #endif
#endif
#ifdef Pl_WhlSpdMeasd1
  #ifndef GET_Pl_WhlSpdMeasd1
    #define GET_Pl_WhlSpdMeasd1() (Pl_WhlSpdMeasd1())
  #endif
#else
  #ifndef GET_Pl_WhlSpdMeasd1
    #define GET_Pl_WhlSpdMeasd1() (Pl_WhlSpdMeasd1)
  #endif
#endif
#ifdef Pl_WhlSpdMeasd2
  #ifndef GET_Pl_WhlSpdMeasd2
    #define GET_Pl_WhlSpdMeasd2() (Pl_WhlSpdMeasd2())
  #endif
#else
  #ifndef GET_Pl_WhlSpdMeasd2
    #define GET_Pl_WhlSpdMeasd2() (Pl_WhlSpdMeasd2)
  #endif
#endif
#ifdef Pl_WhlSpdMeasdVld1
  #ifndef GET_Pl_WhlSpdMeasdVld1
    #define GET_Pl_WhlSpdMeasdVld1() (Pl_WhlSpdMeasdVld1())
  #endif
#else
  #ifndef GET_Pl_WhlSpdMeasdVld1
    #define GET_Pl_WhlSpdMeasdVld1() (Pl_WhlSpdMeasdVld1)
  #endif
#endif
#ifdef Pl_WhlSpdMeasdVld2
  #ifndef GET_Pl_WhlSpdMeasdVld2
    #define GET_Pl_WhlSpdMeasdVld2() (Pl_WhlSpdMeasdVld2())
  #endif
#else
  #ifndef GET_Pl_WhlSpdMeasdVld2
    #define GET_Pl_WhlSpdMeasdVld2() (Pl_WhlSpdMeasdVld2)
  #endif
#endif

#undef RUNNABLE_ID
#define RUNNABLE_ID RUNNABLE_ID_NONE
#undef ACTION_ID
#define ACTION_ID ACTION_ID_NONE

#if !((RUNNABLE_ID == RUNNABLE_ID_NONE) && (ACTION_ID == RUNNABLE_ID_NONE))
#error "Illegal RUNNABLE_ID or ACTION_ID found"
#endif


